<?xml version="1.0" encoding="UTF-8"?>
<specificationSet xmlns="http://www.yawlfoundation.org/yawlschema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.2" xsi:schemaLocation="http://www.yawlfoundation.org/yawlschema http://www.yawlfoundation.org/yawlschema/YAWL_Schema2.2.xsd">
  <specification uri="MedicalEpisode">
    <metaData>
      <title>Medical Episode</title>
      <creator>DavidePassinhas</creator>
      <description>The Medical Episode simple Business Process.</description>
      <version>0.1</version>
      <persistent>false</persistent>
      <identifier>UID_3213f8b4-5757-4674-a6a2-415aa191ca91</identifier>
    </metaData>
    
	<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:simpleType name="gender">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Male" />
          <xs:enumeration value="Female" />
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="patient">
        <xs:sequence>
          <xs:element name="Name" type="xs:string" />
          <xs:element name="Address" type="xs:string" />
          <xs:element name="PhoneNumber" type="xs:string" />
          <xs:element name="Gender" type="gender" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="adminPatData">
        <xs:sequence>
          <xs:element name="Height" type="xs:string" />
          <xs:element name="Weight" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nursePatData">
        <xs:sequence>
          <xs:element name="PhysicalReport" type="xs:string" />
          <xs:element name="PhysicalExamination" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="patData">
        <xs:sequence>
          <xs:element name="Height" type="xs:string" />
          <xs:element name="Weight" type="xs:string" />
          <xs:element name="PhysicalReport" type="xs:string" />
          <xs:element name="PhysicalExamination" type="xs:string" />
          <xs:element name="MedicalExamination" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="prescription">
        <xs:sequence>
          <xs:element name="Recipe" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="medReport">
        <xs:sequence>
          <xs:element name="Report" type="xs:string" />
          <xs:element name="Closed" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="episode">
        <xs:sequence>
          <xs:element name="Patient" type="patient" />
          <xs:element name="PatientData" type="patData" />
          <xs:element name="MedicalReport" type="medReport" />
          <xs:element name="Prescription" type="prescription" />
          <xs:element name="Closed" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>	
	
    <decomposition id="MedicalEpisode" isRootNet="true" xsi:type="NetFactsType">
		<localVariable>
			<index>80</index>
			<name>Patient_Name</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>81</index>
			<name>Patient_Adress</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>82</index>
			<name>Patient_PhoneNumber</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>83</index>
			<name>Patient_Gender</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>84</index>
			<name>PatientData_Height</name>
			<type>long</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>0</initialValue>
		</localVariable>
		<localVariable>
			<index>85</index>
			<name>PatientData_Weight</name>
			<type>long</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>0</initialValue>
		</localVariable>
		<localVariable>
			<index>86</index>
			<name>PatientData_PhysicalReport</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>87</index>
			<name>PatientData_PhysicalExamination</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>88</index>
			<name>PatientData_MedicalExamination</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>89</index>
			<name>MedicalReport_Report</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>810</index>
			<name>MedicalReport_Closed</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>811</index>
			<name>Prescription_Recipe</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>812</index>
			<name>Episode_Closed</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		
		<localVariable>
			<index>90</index>
			<name>Patient_Name_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>91</index>
			<name>Patient_Adress_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>92</index>
			<name>Patient_PhoneNumber_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>93</index>
			<name>Patient_Gender_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>94</index>
			<name>PatientData_Height_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>95</index>
			<name>PatientData_Weight_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>96</index>
			<name>PatientData_PhysicalReport_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>97</index>
			<name>PatientData_PhysicalExamination_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>98</index>
			<name>PatientData_MedicalExamination_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>99</index>
			<name>MedicalReport_Report_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>910</index>
			<name>MedicalReport_Closed_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>911</index>
			<name>Prescription_Recipe_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		<localVariable>
			<index>912</index>
			<name>Episode_Closed_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
			<initialValue>string</initialValue>
		</localVariable>
		
      <processControlElements>
        <inputCondition id="InputCondition_1">
          <flowsInto>
            <nextElementRef id="Check-in_Patient_3" />
          </flowsInto>
        </inputCondition>
        <task id="Check-in_Patient_3">
          <name>Check-in_Patient</name>
          <flowsInto>
            <nextElementRef id="Physical_Examination_4" />
          </flowsInto>
          <flowsInto>
            <nextElementRef id="Collect_Data_5" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <completedMappings>
			<mapping>
              <expression query="&lt;Patient_Name_State&gt;{/Check-in_Patient/Patient_Name_State/text()}&lt;/Patient_Name_State&gt;" />
              <mapsTo>Patient_Name_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Name&gt;{/Check-in_Patient/Patient_Name/text()}&lt;/Patient_Name&gt;" />
              <mapsTo>Patient_Name</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress_State&gt;{/Check-in_Patient/Patient_Adress_State/text()}&lt;/Patient_Adress_State&gt;" />
              <mapsTo>Patient_Adress_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress&gt;{/Check-in_Patient/Patient_Adress/text()}&lt;/Patient_Adress&gt;" />
              <mapsTo>Patient_Adress</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber_State&gt;{/Check-in_Patient/Patient_PhoneNumber_State/text()}&lt;/Patient_PhoneNumber_State&gt;" />
              <mapsTo>Patient_PhoneNumber_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber&gt;{/Check-in_Patient/Patient_PhoneNumber/text()}&lt;/Patient_PhoneNumber&gt;" />
              <mapsTo>Patient_PhoneNumber</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender_State&gt;{/Check-in_Patient/Patient_Gender_State/text()}&lt;/Patient_Gender_State&gt;" />
              <mapsTo>Patient_Gender_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender&gt;{/Check-in_Patient/Patient_Gender/text()}&lt;/Patient_Gender&gt;" />
              <mapsTo>Patient_Gender</mapsTo>
            </mapping>
          </completedMappings>
          <resourcing>
            <offer initiator="user" />
            <allocate initiator="user" />
            <start initiator="user" />
          </resourcing>
          <decomposesTo id="Check-in_Patient" />
        </task>
		
        <task id="Collect_Data_5">
          <name>Collect_Data</name>
          <flowsInto>
            <nextElementRef id="Doctor_appointment_6" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
		   <startingMappings>
			<mapping>
              <expression query="&lt;Patient_Name_State&gt;{/MedicalEpisode/Patient_Name_State/text()}&lt;/Patient_Name_State&gt;" />
              <mapsTo>Patient_Name_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Name&gt;{/MedicalEpisode/Patient_Name/text()}&lt;/Patient_Name&gt;" />
              <mapsTo>Patient_Name</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress_State&gt;{/MedicalEpisode/Patient_Adress_State/text()}&lt;/Patient_Adress_State&gt;" />
              <mapsTo>Patient_Adress_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress&gt;{/MedicalEpisode/Patient_Adress/text()}&lt;/Patient_Adress&gt;" />
              <mapsTo>Patient_Adress</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber_State&gt;{/MedicalEpisode/Patient_PhoneNumber_State/text()}&lt;/Patient_PhoneNumber_State&gt;" />
              <mapsTo>Patient_PhoneNumber_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber&gt;{/MedicalEpisode/Patient_PhoneNumber/text()}&lt;/Patient_PhoneNumber&gt;" />
              <mapsTo>Patient_PhoneNumber</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender_State&gt;{/MedicalEpisode/Patient_Gender_State/text()}&lt;/Patient_Gender_State&gt;" />
              <mapsTo>Patient_Gender_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender&gt;{/MedicalEpisode/Patient_Gender/text()}&lt;/Patient_Gender&gt;" />
              <mapsTo>Patient_Gender</mapsTo>
            </mapping>
          </startingMappings>
		  
          <completedMappings>
		  	<mapping>
              <expression query="&lt;PatientData_Height_State&gt;{/Collect_Data/PatientData_Height_State/text()}&lt;/PatientData_Height_State&gt;" />
              <mapsTo>PatientData_Height_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_Height&gt;{/Collect_Data/PatientData_Height/text()}&lt;/PatientData_Height&gt;" />
              <mapsTo>PatientData_Height</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_Weight_State&gt;{/Collect_Data/PatientData_Weight_State/text()}&lt;/PatientData_Weight_State&gt;" />
              <mapsTo>PatientData_Weight_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_Weight&gt;{/Collect_Data/PatientData_Weight/text()}&lt;/PatientData_Weight&gt;" />
              <mapsTo>PatientData_Weight</mapsTo>
            </mapping>
          </completedMappings>
          <resourcing>
            <offer initiator="user" />
            <allocate initiator="user" />
            <start initiator="user" />
          </resourcing>
          <decomposesTo id="Collect_Data" />
        </task>
		
		<task id="Physical_Examination_4">
          <name>Physical_Examination</name>
          <flowsInto>
            <nextElementRef id="Doctor_appointment_6" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
		   <startingMappings>
            <mapping>
              <expression query="&lt;Patient_Name_State&gt;{/MedicalEpisode/Patient_Name_State/text()}&lt;/Patient_Name_State&gt;" />
              <mapsTo>Patient_Name_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Name&gt;{/MedicalEpisode/Patient_Name/text()}&lt;/Patient_Name&gt;" />
              <mapsTo>Patient_Name</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress_State&gt;{/MedicalEpisode/Patient_Adress_State/text()}&lt;/Patient_Adress_State&gt;" />
              <mapsTo>Patient_Adress_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress&gt;{/MedicalEpisode/Patient_Adress/text()}&lt;/Patient_Adress&gt;" />
              <mapsTo>Patient_Adress</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber_State&gt;{/MedicalEpisode/Patient_PhoneNumber_State/text()}&lt;/Patient_PhoneNumber_State&gt;" />
              <mapsTo>Patient_PhoneNumber_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber&gt;{/MedicalEpisode/Patient_PhoneNumber/text()}&lt;/Patient_PhoneNumber&gt;" />
              <mapsTo>Patient_PhoneNumber</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender_State&gt;{/MedicalEpisode/Patient_Gender_State/text()}&lt;/Patient_Gender_State&gt;" />
              <mapsTo>Patient_Gender_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender&gt;{/MedicalEpisode/Patient_Gender/text()}&lt;/Patient_Gender&gt;" />
              <mapsTo>Patient_Gender</mapsTo>
            </mapping>
          </startingMappings>
          <completedMappings>
		  <mapping>
              <expression query="&lt;PatientData_PhysicalReport_State&gt;{/Physical_Examination/PatientData_PhysicalReport_State/text()}&lt;/PatientData_PhysicalReport_State&gt;" />
              <mapsTo>PatientData_PhysicalReport_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_PhysicalReport&gt;{/Physical_Examination/PatientData_PhysicalReport/text()}&lt;/PatientData_PhysicalReport&gt;" />
              <mapsTo>PatientData_PhysicalReport</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_PhysicalExamination_State&gt;{/Physical_Examination/PatientData_PhysicalExamination_State/text()}&lt;/PatientData_PhysicalExamination_State&gt;" />
              <mapsTo>PatientData_PhysicalExamination_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_PhysicalExamination&gt;{/Physical_Examination/PatientData_PhysicalExamination/text()}&lt;/PatientData_PhysicalExamination&gt;" />
              <mapsTo>PatientData_PhysicalExamination</mapsTo>
            </mapping>
          </completedMappings>
          <resourcing>
            <offer initiator="user" />
            <allocate initiator="user" />
            <start initiator="user" />
          </resourcing>
          <decomposesTo id="Physical_Examination" />
        </task>
		
		<task id="Doctor_appointment_6">
          <name>Doctor_appointment</name>
          <flowsInto>
            <nextElementRef id="Check-out_Patient_7" />
          </flowsInto>
          <join code="and" />
          <split code="and" />
		   <startingMappings>
		   	<mapping>
              <expression query="&lt;Patient_Name_State&gt;{/MedicalEpisode/Patient_Name_State/text()}&lt;/Patient_Name_State&gt;" />
              <mapsTo>Patient_Name_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Name&gt;{/MedicalEpisode/Patient_Name/text()}&lt;/Patient_Name&gt;" />
              <mapsTo>Patient_Name</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress_State&gt;{/MedicalEpisode/Patient_Adress_State/text()}&lt;/Patient_Adress_State&gt;" />
              <mapsTo>Patient_Adress_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress&gt;{/MedicalEpisode/Patient_Adress/text()}&lt;/Patient_Adress&gt;" />
              <mapsTo>Patient_Adress</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber_State&gt;{/MedicalEpisode/Patient_PhoneNumber_State/text()}&lt;/Patient_PhoneNumber_State&gt;" />
              <mapsTo>Patient_PhoneNumber_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber&gt;{/MedicalEpisode/Patient_PhoneNumber/text()}&lt;/Patient_PhoneNumber&gt;" />
              <mapsTo>Patient_PhoneNumber</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender_State&gt;{/MedicalEpisode/Patient_Gender_State/text()}&lt;/Patient_Gender_State&gt;" />
              <mapsTo>Patient_Gender_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender&gt;{/MedicalEpisode/Patient_Gender/text()}&lt;/Patient_Gender&gt;" />
              <mapsTo>Patient_Gender</mapsTo>
            </mapping>
		   
		    <mapping>
              <expression query="&lt;PatientData_Height_State&gt;{/MedicalEpisode/PatientData_Height_State/text()}&lt;/PatientData_Height_State&gt;" />
              <mapsTo>PatientData_Height_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_Height&gt;{/MedicalEpisode/PatientData_Height/text()}&lt;/PatientData_Height&gt;" />
              <mapsTo>PatientData_Height</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_Weight_State&gt;{/MedicalEpisode/PatientData_Weight_State/text()}&lt;/PatientData_Weight_State&gt;" />
              <mapsTo>PatientData_Weight_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_Weight&gt;{/MedicalEpisode/PatientData_Weight/text()}&lt;/PatientData_Weight&gt;" />
              <mapsTo>PatientData_Weight</mapsTo>
            </mapping>
		   
		   	<mapping>
              <expression query="&lt;PatientData_PhysicalReport_State&gt;{/MedicalEpisode/PatientData_PhysicalReport_State/text()}&lt;/PatientData_PhysicalReport_State&gt;" />
              <mapsTo>PatientData_PhysicalReport_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_PhysicalReport&gt;{/MedicalEpisode/PatientData_PhysicalReport/text()}&lt;/PatientData_PhysicalReport&gt;" />
              <mapsTo>PatientData_PhysicalReport</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_PhysicalExamination_State&gt;{/MedicalEpisode/PatientData_PhysicalExamination_State/text()}&lt;/PatientData_PhysicalExamination_State&gt;" />
              <mapsTo>PatientData_PhysicalExamination_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;PatientData_PhysicalExamination&gt;{/MedicalEpisode/PatientData_PhysicalExamination/text()}&lt;/PatientData_PhysicalExamination&gt;" />
              <mapsTo>PatientData_PhysicalExamination</mapsTo>
            </mapping>
          </startingMappings>
          <completedMappings>
		  
		  	<mapping>
              <expression query="&lt;MedicalReport_Report_State&gt;{/Doctor_appointment/MedicalReport_Report_State/text()}&lt;/MedicalReport_Report_State&gt;" />
              <mapsTo>MedicalReport_Report_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;MedicalReport_Report&gt;{/Doctor_appointment/MedicalReport_Report/text()}&lt;/MedicalReport_Report&gt;" />
              <mapsTo>MedicalReport_Report</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;MedicalReport_Closed_State&gt;{/Doctor_appointment/MedicalReport_Closed_State/text()}&lt;/MedicalReport_Closed_State&gt;" />
              <mapsTo>MedicalReport_Closed_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;MedicalReport_Closed&gt;{/Doctor_appointment/MedicalReport_Closed/text()}&lt;/MedicalReport_Closed&gt;" />
              <mapsTo>MedicalReport_Closed</mapsTo>
            </mapping>
		  
		  	<mapping>
              <expression query="&lt;Prescription_Recipe_State&gt;{/Doctor_appointment/Prescription_Recipe_State/text()}&lt;/Prescription_Recipe_State&gt;" />
              <mapsTo>Prescription_Recipe_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Prescription_Recipe&gt;{/Doctor_appointment/Prescription_Recipe/text()}&lt;/Prescription_Recipe&gt;" />
              <mapsTo>Prescription_Recipe</mapsTo>
            </mapping>

          </completedMappings>
          <resourcing>
            <offer initiator="user" />
            <allocate initiator="user" />
            <start initiator="user" />
          </resourcing>
          <decomposesTo id="Doctor_appointment" />
        </task>
		
        <task id="Check-out_Patient_7">
          <name>Check-out_Patient</name>
          <flowsInto>
            <nextElementRef id="OutputCondition_2" />
          </flowsInto>
          <join code="xor" />
          <split code="and" />
          <startingMappings>
		    <mapping>
              <expression query="&lt;Patient_Name_State&gt;{/MedicalEpisode/Patient_Name_State/text()}&lt;/Patient_Name_State&gt;" />
              <mapsTo>Patient_Name_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Name&gt;{/MedicalEpisode/Patient_Name/text()}&lt;/Patient_Name&gt;" />
              <mapsTo>Patient_Name</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress_State&gt;{/MedicalEpisode/Patient_Adress_State/text()}&lt;/Patient_Adress_State&gt;" />
              <mapsTo>Patient_Adress_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Adress&gt;{/MedicalEpisode/Patient_Adress/text()}&lt;/Patient_Adress&gt;" />
              <mapsTo>Patient_Adress</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber_State&gt;{/MedicalEpisode/Patient_PhoneNumber_State/text()}&lt;/Patient_PhoneNumber_State&gt;" />
              <mapsTo>Patient_PhoneNumber_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_PhoneNumber&gt;{/MedicalEpisode/Patient_PhoneNumber/text()}&lt;/Patient_PhoneNumber&gt;" />
              <mapsTo>Patient_PhoneNumber</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender_State&gt;{/MedicalEpisode/Patient_Gender_State/text()}&lt;/Patient_Gender_State&gt;" />
              <mapsTo>Patient_Gender_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Patient_Gender&gt;{/MedicalEpisode/Patient_Gender/text()}&lt;/Patient_Gender&gt;" />
              <mapsTo>Patient_Gender</mapsTo>
            </mapping>
          </startingMappings>
		  
		  <completedMappings>
			<mapping>
              <expression query="&lt;Episode_Closed_State&gt;{/Check-out_Patient/Episode_Closed_State/text()}&lt;/Episode_Closed_State&gt;" />
              <mapsTo>Episode_Closed_State</mapsTo>
            </mapping>
			<mapping>
              <expression query="&lt;Episode_Closed&gt;{/Check-out_Patient/Episode_Closed/text()}&lt;/Episode_Closed&gt;" />
              <mapsTo>Episode_Closed</mapsTo>
            </mapping>
          </completedMappings>
		  
          <resourcing>
            <offer initiator="user" />
            <allocate initiator="user" />
            <start initiator="user" />
          </resourcing>
          <decomposesTo id="Check-out_Patient" />
        </task>
        <outputCondition id="OutputCondition_2" />
      </processControlElements>
    </decomposition>
	
	<decomposition id="Check-in_Patient" xsi:type="WebServiceGatewayFactsType">
	    <outputParam>
			<index>0</index>
			<name>Patient_Name_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>1</index>
			<name>Patient_Name</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>2</index>
			<name>Patient_Adress_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>3</index>
			<name>Patient_Adress</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>4</index>
			<name>Patient_PhoneNumber_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>5</index>
			<name>Patient_PhoneNumber</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>6</index>
			<name>Patient_Gender_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>7</index>
			<name>Patient_Gender</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
      <externalInteraction>manual</externalInteraction>
    </decomposition>
	
    <decomposition id="Collect_Data" xsi:type="WebServiceGatewayFactsType">
		<inputParam>
			<index>0</index>
			<name>Patient_Name_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>1</index>
			<name>Patient_Name</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>2</index>
			<name>Patient_Adress_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>3</index>
			<name>Patient_Adress</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>4</index>
			<name>Patient_PhoneNumber_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>5</index>
			<name>Patient_PhoneNumber</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>6</index>
			<name>Patient_Gender_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>7</index>
			<name>Patient_Gender</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
	
		<outputParam>
			<index>8</index>
			<name>PatientData_Height_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>9</index>
			<name>PatientData_Height</name>
			<type>long</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>10</index>
			<name>PatientData_Weight_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>11</index>
			<name>PatientData_Weight</name>
			<type>long</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		
      <externalInteraction>manual</externalInteraction>
    </decomposition>
	
	<decomposition id="Physical_Examination" xsi:type="WebServiceGatewayFactsType">
		<inputParam>
			<index>0</index>
			<name>Patient_Name_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>1</index>
			<name>Patient_Name</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>2</index>
			<name>Patient_Adress_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>3</index>
			<name>Patient_Adress</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>4</index>
			<name>Patient_PhoneNumber_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>5</index>
			<name>Patient_PhoneNumber</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>6</index>
			<name>Patient_Gender_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>7</index>
			<name>Patient_Gender</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
	
		<outputParam>
			<index>8</index>
			<name>PatientData_PhysicalReport_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>9</index>
			<name>PatientData_PhysicalReport</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>10</index>
			<name>PatientData_PhysicalExamination_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>11</index>
			<name>PatientData_PhysicalExamination</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
      <externalInteraction>manual</externalInteraction>
    </decomposition>
	
	<decomposition id="Doctor_appointment" xsi:type="WebServiceGatewayFactsType">
		<inputParam>
			<index>0</index>
			<name>Patient_Name_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>1</index>
			<name>Patient_Name</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>2</index>
			<name>Patient_Adress_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>3</index>
			<name>Patient_Adress</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>4</index>
			<name>Patient_PhoneNumber_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>5</index>
			<name>Patient_PhoneNumber</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>6</index>
			<name>Patient_Gender_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>7</index>
			<name>Patient_Gender</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		
		<inputParam>
			<index>8</index>
			<name>PatientData_Height_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>9</index>
			<name>PatientData_Height</name>
			<type>long</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>10</index>
			<name>PatientData_Weight_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>11</index>
			<name>PatientData_Weight</name>
			<type>long</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>12</index>
			<name>PatientData_PhysicalReport_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>13</index>
			<name>PatientData_PhysicalReport</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>14</index>
			<name>PatientData_PhysicalExamination_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>15</index>
			<name>PatientData_PhysicalExamination</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		
		
	    <outputParam>
			<index>16</index>
			<name>MedicalReport_Report_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>17</index>
			<name>MedicalReport_Report</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>18</index>
			<name>MedicalReport_Closed_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>19</index>
			<name>MedicalReport_Closed</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>20</index>
			<name>Prescription_Recipe_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>21</index>
			<name>Prescription_Recipe</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
      <externalInteraction>manual</externalInteraction>
    </decomposition>
	
	<decomposition id="Check-out_Patient" xsi:type="WebServiceGatewayFactsType">
		<inputParam>
			<index>0</index>
			<name>Patient_Name_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>1</index>
			<name>Patient_Name</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>2</index>
			<name>Patient_Adress_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>3</index>
			<name>Patient_Adress</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>4</index>
			<name>Patient_PhoneNumber_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>5</index>
			<name>Patient_PhoneNumber</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>6</index>
			<name>Patient_Gender_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
		<inputParam>
			<index>7</index>
			<name>Patient_Gender</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</inputParam>
	
	    <outputParam>
			<index>8</index>
			<name>Episode_Closed_State</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
		<outputParam>
			<index>9</index>
			<name>Episode_Closed</name>
			<type>string</type>
			<namespace>http://www.w3.org/2001/XMLSchema</namespace>
		</outputParam>
      <externalInteraction>manual</externalInteraction>
    </decomposition>
  </specification>
</specificationSet>
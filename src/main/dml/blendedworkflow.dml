package pt.ist.socialsoftware.blendedworkflow.engines.domain;

enum pt.ist.socialsoftware.blendedworkflow.engines.domain.DataModel.DataState as DataState;
//enum pt.ist.socialsoftware.blendedworkflow.engines.domain.AchieveGoal.GoalState as GoalState;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.Task.TaskState as TaskState;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.WorkItem.WorkItemState as WorkItemState;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.Attribute.AttributeType as AttributeType;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.Relation.Cardinality as Cardinality;

class BlendedWorkflow {
	Integer bwSpecificationCounter;
}

class OrganizationalModel;

class Role {
	String name;
	String description;
	Boolean bwManagerAcess;
	Boolean organizationalManagerAcess;
	Boolean worklistManagerAcess;
}

class User {
	String name;
	String ID;
	String password;
	String notes;
}

class BWSpecification {
	String name;
	String author;
	String description;
	String creationDate;
	String yawlSpecficationID;
	Integer bwInstanceCounter;
	String UID;
	String version;
}

class BWInstance {
	String ID;
	String name;
	String creationDate;
	String yawlCaseID;
	Integer workItemCounter;
}

class Log;

class LogRecord {
	String date;
	String value;
	String action;
	String author;
}

class WorkItem {
	String ID;
	WorkItemState state;
}

class TaskWorkItem extends WorkItem;

class GoalWorkItem extends WorkItem;

class WorkItemArgument {
	String value;
	DataState state;
}

class GoalModel;

class GoalModelInstance extends GoalModel;

class AchieveGoal {
	String name;
	String description;
}

class MaintainGoal {
	String name;
	String description;
}

class TaskModel;

class TaskModelInstance extends TaskModel;

class Task {
	String name;
	String description;
	TaskState state;
	String previous;
	String joinCode;
	String splitCode;
}

class Condition;

class AndCondition extends Condition;

class OrCondition extends Condition;

class NotCondition extends Condition;

class ExistsAttributeCondition extends Condition;

class ExistsEntityCondition extends Condition;

class CompareAttributeToValueCondition extends Condition {
	String operator;
	String value;
}

class TrueCondition extends Condition;

class ForAllCondition extends Condition;
class ExistsOneCondition extends Condition;

class DataModel;

class DataModelInstance extends DataModel;

class Entity {
	String name;
	Integer entityInstanceCounter;
}

class EntityInstance {
	String ID;
	DataState state;
	Integer attributeInstanceCounter;
	Integer relationInstanceCounter;
}

class Attribute {
	String name;
	AttributeType type;
	boolean isKeyAttribute;
}

class AttributeInstance {
	String ID;
	String value;
	DataState state;
}

class Relation {
	String name;
	Cardinality cardinalityOne;
	Cardinality cardinalityTwo;
	boolean isOneKeyEntity;
	boolean isTwoKeyEntity;
}

class RelationInstance {
	String ID;
}

class RelationRole;

// BlendedWorkflow
relation BlendedWorkflowHasBWSpecifications {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	BWSpecification playsRole bwSpecifications {multiplicity 0..*;}
}

// BWSpecification
relation BWSpecificationHasBWInstances {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	BWInstance playsRole bwInstances {multiplicity 0..*;}
}

relation BWSpecificationHasGoalModel {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	GoalModel playsRole goalModel { multiplicity 0..1; }
}

relation BWSpecificationHasTaskModel {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	TaskModel playsRole taskModel { multiplicity 0..1; }
}

relation BWSpecificationHasDataModel {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	DataModel playsRole dataModel { multiplicity 0..1; }
}

// BWInstance
relation BWInstanceHasGoalModelInstance {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	GoalModelInstance playsRole goalModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasTaskModelInstance {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	TaskModelInstance playsRole taskModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasDataModelInstance {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	DataModelInstance playsRole dataModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasWorkItems {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	WorkItem playsRole workItems {multiplicity 0..*;}
}

// Log
relation BWSpecificationHasLog {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	Log playsRole log {multiplicity 0..1;}
}

relation BWInstanceHasLog {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	Log playsRole log {multiplicity 0..1;}
}

relation LogHasLogRecords {
	Log playsRole log {multiplicity 0..1;}
	LogRecord playsRole logRecords {multiplicity 0..*;}
}

// WorkItem
relation WorkItemRefersToOutputAttributeInstances {
	WorkItem playsRole contraintViolationWorkItems {multiplicity 0..*;}
	AttributeInstance playsRole outputAttributeInstances { multiplicity 0..*; }
}

relation WorkItemRefersInputAttributteInstances {
	WorkItem playsRole preConstraintWorkItems {multiplicity 0..*;}
	AttributeInstance playsRole inputAttributeInstances { multiplicity 0..*; }
}

// WorkItemArgument
relation WorkItemHasInputWorkItemArguments {
	WorkItem playsRole inputWorkItem {multiplicity 0..1;}
	WorkItemArgument playsRole inputWorkItemArguments { multiplicity 0..*; }
}

relation WorkItemHasOutputWorkItemArguments {
	WorkItem playsRole outputWorkItem {multiplicity 0..1;}
	WorkItemArgument playsRole outputWorkItemArguments { multiplicity 0..*; }
}

relation WorkItemArgumentRefersAttributteInstances {
	WorkItemArgument playsRole workItemArgument {multiplicity 0..*;}
	AttributeInstance playsRole attributeInstance { multiplicity 0..1; }
}

// Goal Model
relation GoalModelHasAchieveGoals {
	GoalModel playsRole goalModel { multiplicity 0..1; }
	AchieveGoal playsRole achieveGoals { multiplicity 0..*; }
}

relation GoalModelHasMaintainGoals {
	GoalModel playsRole goalModel { multiplicity 0..1; }
	MaintainGoal playsRole maintainGoals { multiplicity 0..*; }
}

// AchieveGoal
relation AchieveGoalHasGoals {
	AchieveGoal playsRole parentGoal { multiplicity 0..1; }
	AchieveGoal playsRole subGoals { multiplicity 0..*; }
}

relation AchieveGoalHasSucessCondition {
	AchieveGoal playsRole achieveGoal { multiplicity 0..1; }
	Condition playsRole sucessCondition { multiplicity 0..1; }
}

relation AchieveGoalHasActivateConditions {
	AchieveGoal playsRole activateConditionsAchieveGoal {multiplicity 0..1;}
	Condition playsRole activateConditions {multiplicity 0..*;}
}

relation AchieveGoalHasGoalWorkItem {
	AchieveGoal playsRole achieveGoal { multiplicity 0..1; }
	GoalWorkItem playsRole goalWorkItems { multiplicity 0..*; }
}


// Task Model
relation TaskModelHasTasks {
	TaskModel playsRole taskModel { multiplicity 0..1; }
	Task playsRole tasks { multiplicity 0..*; }
}

// Task
relation TaskHasNextTask {
	Task playsRole task { multiplicity 0..*; }
	Task playsRole nextTasks { multiplicity 0..*; }
}

relation TaskHasPreCondition {
	Task playsRole taskPreCondition { multiplicity 0..1; }
	Condition playsRole preConstraint { multiplicity 0..1; }
}

relation TaskHasPostCondition {
	Task playsRole taskPosCondition { multiplicity 0..1; }
	Condition playsRole postConstraint { multiplicity 0..1; }
}

relation TaskHasTaskWorkItem {
	Task playsRole task { multiplicity 0..1; }
	TaskWorkItem playsRole taskWorkItem { multiplicity 0..1; }
}

// DataModel
relation DataModelHasEntities {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Entity playsRole entities { multiplicity 0..*; }
}

relation DataModelHasAttributes {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Attribute playsRole attributes { multiplicity 0..*; }
}

relation DataModelHasRelation {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Relation playsRole relations { multiplicity 0..*; }
}

// Entity
relation EntityHasAttributes {
	Entity playsRole entity { multiplicity 0..1; }
	Attribute playsRole attributes { multiplicity 0..*; }
}

relation EntityMayHaveRelations {
	Entity playsRole entities { multiplicity 0..*; } //FIXME 0..2
	Relation playsRole relations { multiplicity 0..*; }
}

relation EntityHasEntityInstances {
	Entity playsRole entity { multiplicity 0..1; }
	EntityInstance playsRole entityInstances { multiplicity 0..*; }
}

// Relation
relation RelationHasRelationInstances {
	Relation playsRole relationType { multiplicity 0..1; } //FIXME relation
	RelationInstance playsRole relationInstances { multiplicity 0..*; }
}

// Attributes
relation AttributeHasAttributeInstances {
	Attribute playsRole attribute { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstances { multiplicity 0..*; }
}

// EntityInstance
relation EntityInstanceHasAttributeInstances {
	EntityInstance playsRole entityInstance { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstances { multiplicity 0..*; }
}

relation EntityInstanceMayHaveRelationInstances {
	EntityInstance playsRole entityInstances { multiplicity 0..*; } //FIXME 0..2
	RelationInstance playsRole relationInstances { multiplicity 0..*; }
}

// Conditions
// AndCondition
relation AndConditionHasConditions {
	AndCondition playsRole andCondition { multiplicity 0..1; }
	Condition playsRole conditions { multiplicity 0..*; } //FIXME 0..2
}

// OrCondition
relation OrConditionHasConditions {
	OrCondition playsRole orCondition { multiplicity 0..1; }
	Condition playsRole conditions { multiplicity 0..*; } //FIXME 0..2
}

// NotCondition
relation NotConditionHasConditions {
	NotCondition playsRole notCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

// ExistsAttributeCondition
relation ExistsAttributeConditionHasAttributes {
	ExistsAttributeCondition playsRole existsAttributeCondition { multiplicity 0..*; }
	Attribute playsRole attribute { multiplicity 0..1; }
}

//ExistsEntityCondition
relation ExistsEntityConditionHasEntities {
	ExistsEntityCondition playsRole existsEntityCondition { multiplicity 0..*; }
	Entity playsRole entity { multiplicity 0..1; }
}

// CompareAttributeToValueCondition
relation CompareAttributeToValueConditionHasAttributes {
	CompareAttributeToValueCondition playsRole compareAttributeToValueCondition { multiplicity 0..*; }
	Attribute playsRole attribute { multiplicity 0..1; }
}

//OrganizationalModel
relation BlendedWorkflowHasOrganizationalModel {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
}

relation OrganizationalModelHasRoles {
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
	Role playsRole roles {multiplicity 0..*;}
}

relation OrganizationalModelHasUsers {
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
	User playsRole users {multiplicity 0..*;}
}

relation BWInstanceHasUser {
	BWInstance playsRole bwInstance {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation UserHasRoles {
	User playsRole users {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation TaskHasRoles {
	Task playsRole tasks {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation TaskHasUsers {
	Task playsRole tasks {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation AchieveGoalHasRoles {
	AchieveGoal playsRole achieveGoals {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation AchieveGoalHasUsers {
	AchieveGoal playsRole achieveGoals {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation WorkItemHasRoles {
	WorkItem playsRole workItems {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation WorkItemHasUsers {
	WorkItem playsRole workItems {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

//NEWGoalModel Relations
relation AchieveGoalHasEntity {
	AchieveGoal playsRole achieveGoalContext {multiplicity 0..*;}
	Entity playsRole entityContext {multiplicity 0..1;}
}

relation MaintainGoalHasEntity {
	MaintainGoal playsRole maintainGoalContext {multiplicity 0..*;}
	Entity playsRole maintainGoalEntityContext {multiplicity 0..1;}
}

relation GoalWorkItemHasEntityInstances {
	GoalWorkItem playsRole goalWorkItemContext {multiplicity 0..*;}
	EntityInstance playsRole entityInstanceContext {multiplicity 0..1;}
}

relation MaintainGoalHasMaintainCondition {
	MaintainGoal playsRole maintainConditionAchieveGoal {multiplicity 0..1;}
	Condition playsRole maintainCondition {multiplicity 0..1;}
}

relation GoalWorkItemHasActivateCondition {
	GoalWorkItem playsRole activateConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole activateConditions {multiplicity 0..*;}
}

relation GoalWorkItemHasSucessCondition {
	GoalWorkItem playsRole sucessConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole sucessCondition {multiplicity 0..1;}
}

//ForAllCondition
relation ForAllConditionConditionHasCondition {
	ForAllCondition playsRole forAllCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

relation ForAllConditionConditionHasRelationRole {
	ForAllCondition playsRole forAllCondition { multiplicity 0..1; }
	RelationRole playsRole relationRole { multiplicity 0..1; }
}

//ExistsOne
relation ExistsOneConditionConditionHasRelationRole {
	ExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	RelationRole playsRole relationRole { multiplicity 0..1; }
}

//RelationRole
relation RelationRoleHasRelation {
	RelationRole playsRole relationRole {multiplicity 0..1;}
	Relation playsRole relationRoleRelation {multiplicity 0..1;}
}

relation RelationRoleHasEntity {
	RelationRole playsRole relationRole {multiplicity 0..1;}
	Entity playsRole entity {multiplicity 0..1;}
}


package pt.ist.socialsoftware.blendedworkflow.engines.domain;

enum pt.ist.socialsoftware.blendedworkflow.engines.domain.DataModel.DataState as DataState;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.Goal.GoalState as GoalState;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.WorkItem.WorkItemState as WorkItemState;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.Attribute.AttributeType as AttributeType;
enum pt.ist.socialsoftware.blendedworkflow.engines.domain.Relation.Cardinality as Cardinality;

class BlendedWorkflow;

class BWSpecification {
	String id;
	String name;
}

class BWInstance {
	String id;
	String name;
}

class WorkItem {
	String id;
	WorkItemState state;
}

class TaskWorkItem extends WorkItem {
	String TaskInstanceId;
}

class GoalWorkItem extends WorkItem;

class GoalModel {
	String id;
}

class GoalModelInstance extends GoalModel { 
	String GoalModelInstanceId;
}

class Goal {
	String id;
	String name;
	GoalState state;
}

class Condition;

class AndCondition extends Condition;

class OrCondition extends Condition;

class NotCondition extends Condition;

class ExistsAttributeCondition extends Condition;

class ExistsEntityCondition extends Condition;

class CompareAttributeToValueCondition extends Condition {
	String operator;
	String value;
}

class TrueCondition extends Condition;


class DataModel {
	String dataModelURI; 
	String activityModelURI;
	String goalModelURI;
	// int instanceCounter = 0;
	// HashMap<String, ParameterMapping> parameterMappings = new HashMap<String, ParameterMapping>();
}

class DataModelInstance extends DataModel { 
	String dataModelInstanceID;
	boolean activityCaseClaimed; // = false;
	String activityCaseInstanceID;
	String goalCaseInstanceID; 
	// DataModelInstance instance;
}

class Entity {
	String id;
	String name;
	// boolean singleInstance = false;
	// int instanceCounter= 0;
}

class EntityInstance {
	String id;
	// Entity parent; // relation EntityInstanceRefersToEntity
	// DataModelInstance dataModelInstance; // = null
	// boolean isSkipped = false;
	// boolean isDefined = false;
}

class Attribute {
	String id;
	String name;
	AttributeType type;
	boolean isKeyAttribute;
	// EntityTemplate entity; // relation AttributeTemplateRefersToEntityTemplate
}

class AttributeInstance {
	String id;
	String value; // = null
	DataState state;
	// Attribute parent; // relation AttributeInstanceRefersToAttribute
	// EntityInstance entity; // relation AttributeInstanceRefersToEntityInstance
	// boolean isSkipped = false;
	// DataModelInstance dataModel = null;
}

class Relation {
	Cardinality cardinalityOne;
	Cardinality cardinalityTwo;
	boolean isOneKeyEntity;
	boolean isTwoKeyEntity;
	// Entity entityOne; // relation RelationHasEntities
	// Entity entityTwo; // relation RelationHasEntities	
}

class RelationInstance {
	// Relation parent; //  relation RelationInstanceRefersToRelation
	// EntityInstance entityOne; // relation RelationInstanceHasEntityInstances
	// EntityInstance entityTwo; // relation RelationInstanceHasEntityInstances
}

// BlendedWorkflow
relation BlendedWorkflowHasBWSpecifications {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	BWSpecification playsRole bwSpecification {multiplicity 0..*;}
}

// BWSpecification
relation BWSpecificationHasBWInstances {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	BWInstance playsRole bwInstance {multiplicity 0..*;}
}

relation BWSpecificationHasGoalModel {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	GoalModel playsRole goalModel { multiplicity 0..1; }
}

relation BWSpecificationHasDataModel {
	BWSpecification playsRole bwSpecification {multiplicity 0..1;}
	DataModel playsRole dataModel { multiplicity 0..1; }
}

// BWInstance
relation BWInstanceHasWorkItems {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	WorkItem playsRole workItem {multiplicity 0..*;}
}

// WorkItem
relation WorkItemRefersToAttributeInstances {
	WorkItem playsRole workItem {multiplicity 0..*;}
	AttributeInstance playsRole attributeInstance { multiplicity 0..*; }
}

// Goal Model
relation GoalModelHasGoals {
	GoalModel playsRole goalModel { multiplicity 0..1; }
	Goal playsRole goal { multiplicity 0..*; }
}

// Goal
relation GoalHasGoals {
	Goal playsRole goal { multiplicity 0..1; }
	Goal playsRole goals { multiplicity 0..*; }
}

relation GoalHasCondition {
	Goal playsRole goal { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

relation GoalHasGoalWorkItem {
	Goal playsRole goal { multiplicity 0..1; }
	GoalWorkItem playsRole goalWorkItem { multiplicity 0..1; }
}

// DataModel
relation DataModelHasDataModelInstances {
	DataModel playsRole dataModel { multiplicity 0..1; }
	DataModelInstance playsRole dataModelInstance { multiplicity 0..*; }
}

relation DataModelHasEntities {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Entity playsRole entity { multiplicity 0..*; }
}

relation DataModelHasAttributes {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..*; }
}

relation DataModelHasRelation {
	DataModel playsRole dataModel { multiplicity 0..1; }
	Relation playsRole relations { multiplicity 0..*; }
}

// Entity
relation EntityHasAttributes {
	Entity playsRole entity { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..*; }
}

relation EntityMayHaveRelations {
	Entity playsRole entity { multiplicity 0..2; }
	Relation playsRole relations { multiplicity 0..*; }
}

relation EntityHasEntityInstances {
	Entity playsRole entity { multiplicity 0..1; }
	EntityInstance playsRole entityInstance { multiplicity 0..*; }
}

// Relation
relation RelationHasRelationInstances {
	Relation playsRole relations { multiplicity 0..1; }
	RelationInstance playsRole relationInstance { multiplicity 0..*; }
}

// Attributes
relation AttributeHasAttributeInstances {
	Attribute playsRole attribute { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstance { multiplicity 0..*; }
}

// EntityInstance
relation EntityInstanceHasAttributeInstances {
	EntityInstance playsRole entityInstance { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstance { multiplicity 0..*; }
}

relation EntityInstanceMayHaveRelationInstances {
	EntityInstance playsRole entityInstance { multiplicity 0..2; }
	RelationInstance playsRole relationInstance { multiplicity 0..*; }
}

// Conditions
// AndCondition
relation AndConditionHasConditions {
	AndCondition playsRole andCondition { multiplicity 0..1; }
	Condition playsRole conditions { multiplicity 0..*; }
}

// OrCondition
relation OrConditionHasConditions {
	OrCondition playsRole orCondition { multiplicity 0..1; }
	Condition playsRole conditions { multiplicity 0..*; }
}

// NotCondition
relation NotConditionHasConditions {
	NotCondition playsRole notCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

// ExistsAttributeCondition
relation ExistsAttributeConditionHasAttributes {
	ExistsAttributeCondition playsRole existsAttributeCondition { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..1; }
}

//ExistsEntityCondition
relation ExistsEntityConditionHasEntities {
	ExistsEntityCondition playsRole existsEntityCondition { multiplicity 0..1; }
	Entity playsRole entity { multiplicity 0..1; }
}


// CompareAttributeToValueCondition
relation CompareAttributeToValueConditionHasAttributes {
	CompareAttributeToValueCondition playsRole compareAttributeToValueCondition { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..1; }
}


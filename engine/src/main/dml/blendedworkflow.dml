package pt.ist.socialsoftware.blendedworkflow.domain;

enum pt.ist.socialsoftware.blendedworkflow.domain.BWDataModel.DataState as DataState;
enum pt.ist.socialsoftware.blendedworkflow.domain.MaintainGoal.MaintainGoalState as MaintainGoalState;
//enum pt.ist.socialsoftware.blendedworkflow.domain.Task.TaskState as TaskState;
//enum pt.ist.socialsoftware.blendedworkflow.domain.WorkItem.WorkItemState as WorkItemState;
enum pt.ist.socialsoftware.blendedworkflow.domain.TaskWorkItem.ActivityState as ActivityState;
enum pt.ist.socialsoftware.blendedworkflow.domain.GoalWorkItem.GoalState as GoalState;
enum pt.ist.socialsoftware.blendedworkflow.domain.BWAttribute.AttributeType as AttributeType;
enum pt.ist.socialsoftware.blendedworkflow.domain.BWRelation.Cardinality as Cardinality;

class BlendedWorkflow {
	Integer specificationCounter;
}

relation DomainRootHasBlendedWorkflowApplication {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 1..1;
	}
	BlendedWorkflow playsRole blendedWorkflow {
		multiplicity 0..1;
	}
}

class OrganizationalModel;

class Role {
	String name;
	String description;
	Boolean bwManagerAcess;
	Boolean organizationalManagerAcess;
	Boolean worklistManagerAcess;
}

class User {
	String name;
	String ID;
	String password;
	String notes;
}

class BWSpecification {
  String specId;
	String name;
	String author;
	String description;
	String creationDate;
	String yawlSpecficationID;
	Integer instanceCounter;
	String UID;
	String version;
}

class BWDataModel;

class DataModelInstance extends BWDataModel;

class BWEntity {
	String name;
	boolean exists;
	Integer entityInstanceCounter;
}

class BWAttribute {
	String name;
	AttributeType type;
	boolean isKeyAttribute;
	boolean isSystem;
}

class BWAttributeGroup {
	String name;
}

class BWRelation {
	String name;
	String roleNameOne;
	String roleNameTwo;
	Cardinality cardinalityOne;
	Cardinality cardinalityTwo;
	boolean isOneKeyEntity;
	boolean isTwoKeyEntity;
}

class BWInstance {
	String ID;
	String name;
	String creationDate;
	String yawlCaseID;
	Integer workItemCounter;
}

class Log;

class LogRecord {
	String date;
	String value;
	String action;
	String author;
}

class WorkItem {
	String ID;
//	WorkItemState stateDELETE;
}

class TaskWorkItem extends WorkItem {
	ActivityState state;
}

class GoalWorkItem extends WorkItem {
	GoalState state;
}

class WorkItemArgument {
	String value;
	DataState state;
}

class BWGoalModel;

class GoalModelInstance extends BWGoalModel;

class AchieveGoal {
	String name;
	String description;
}

class MaintainGoal {
	String name;
	String description;
	MaintainGoalState state;
}

class TaskModel;

class TaskModelInstance extends TaskModel;

class Task {
	String name;
	String description;
//	TaskState state;
	String previous;
	String joinCode;
	String splitCode;
}

class Condition;

class AndCondition extends Condition;

class OrCondition extends Condition;

class NotCondition extends Condition;

class ExistsAttributeCondition extends Condition;

class ExistsEntityCondition extends Condition;

class CompareAttributeToValueCondition extends Condition {
	String operator;
	String value;
}

class TrueCondition extends Condition;

class ForAllCondition extends Condition;
class ExistsOneCondition extends Condition;

class EntityInstance {
	String ID;
	DataState state;
	Integer attributeInstanceCounter;
	Integer relationInstanceCounter;
}

class AttributeInstance {
	String ID;
	String value;
	DataState state;
}

class RelationInstance {
	String ID;
}

//class RelationRole;

// BlendedWorkflow
relation BlendedWorkflowHasBWSpecifications {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	BWSpecification playsRole specification {multiplicity 0..*;}
}

// BWSpecification
relation BWSpecificationHasBWInstances {
	BWSpecification playsRole specification {multiplicity 0..1;}
	BWInstance playsRole bwInstances {multiplicity 0..*;}
}

relation BWSpecificationHasBWGoalModel {
	BWSpecification playsRole specification {multiplicity 0..1;}
	BWGoalModel playsRole goalModel { multiplicity 0..1; }
}

relation BWSpecificationHasTaskModel {
	BWSpecification playsRole specification {multiplicity 0..1;}
	TaskModel playsRole taskModel { multiplicity 0..1; }
}

relation BWSpecificationHasBWDataModel {
	BWSpecification playsRole specification {multiplicity 0..1;}
	BWDataModel playsRole dataModel { multiplicity 0..1; }
}

// BWInstance
relation BWInstanceHasGoalModelInstance {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	GoalModelInstance playsRole goalModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasTaskModelInstance {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	TaskModelInstance playsRole taskModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasDataModelInstance {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	DataModelInstance playsRole dataModelInstance {multiplicity 0..1;}
}

relation BWInstanceHasWorkItems {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	WorkItem playsRole workItems {multiplicity 0..*;}
}

// Log
relation BWSpecificationHasLog {
	BWSpecification playsRole specification {multiplicity 0..1;}
	Log playsRole log {multiplicity 0..1;}
}

relation BWInstanceHasLog {
	BWInstance playsRole bwInstance {multiplicity 0..1;}
	Log playsRole log {multiplicity 0..1;}
}

relation LogHasLogRecords {
	Log playsRole log {multiplicity 0..1;}
	LogRecord playsRole logRecords {multiplicity 0..*;}
}

// WorkItem
relation WorkItemRefersToOutputAttributeInstances {
	WorkItem playsRole contraintViolationWorkItems {multiplicity 0..*;}
	AttributeInstance playsRole outputAttributeInstances { multiplicity 0..*; }
}

relation WorkItemRefersInputAttributteInstances {
	WorkItem playsRole preConstraintWorkItems {multiplicity 0..*;}
	AttributeInstance playsRole inputAttributeInstances { multiplicity 0..*; }
}

// WorkItemArgument
relation WorkItemHasInputWorkItemArguments {
	WorkItem playsRole inputWorkItem {multiplicity 0..1;}
	WorkItemArgument playsRole inputWorkItemArguments { multiplicity 0..*; }
}

relation WorkItemHasOutputWorkItemArguments {
	WorkItem playsRole outputWorkItem {multiplicity 0..1;}
	WorkItemArgument playsRole outputWorkItemArguments { multiplicity 0..*; }
}

relation WorkItemArgumentRefersAttributteInstances {
	WorkItemArgument playsRole workItemArgument {multiplicity 0..*;}
	AttributeInstance playsRole attributeInstance { multiplicity 0..1; }
}

// Goal Model
relation BWGoalModelHasAchieveGoals {
	BWGoalModel playsRole goalModel { multiplicity 0..1; }
	AchieveGoal playsRole achieveGoals { multiplicity 0..*; }
}

relation BWGoalModelHasMaintainGoals {
	BWGoalModel playsRole goalModel { multiplicity 0..1; }
	MaintainGoal playsRole maintainGoals { multiplicity 0..*; }
}

// AchieveGoal
relation AchieveGoalHasGoals {
	AchieveGoal playsRole parentGoal { multiplicity 0..1; }
	AchieveGoal playsRole subGoals { multiplicity 0..*; }
}

relation AchieveGoalHasSucessCondition {
	AchieveGoal playsRole achieveGoal { multiplicity 0..1; }
	Condition playsRole sucessCondition { multiplicity 0..1; }
}

relation AchieveGoalHasActivateConditions {
	AchieveGoal playsRole activateConditionsAchieveGoal {multiplicity 0..1;}
	Condition playsRole activateConditions {multiplicity 0..*;}
}

relation AchieveGoalHasGoalWorkItem {
	AchieveGoal playsRole achieveGoal { multiplicity 0..1; }
	GoalWorkItem playsRole goalWorkItems { multiplicity 0..*; }
}


// Task Model
relation TaskModelHasTasks {
	TaskModel playsRole taskModel { multiplicity 0..1; }
	Task playsRole tasks { multiplicity 0..*; }
}

// Task
relation TaskHasNextTask {
	Task playsRole task { multiplicity 0..*; }
	Task playsRole nextTasks { multiplicity 0..*; }
}

relation TaskHasPreCondition {
	Task playsRole taskPreCondition { multiplicity 0..1; }
	Condition playsRole preConstraint { multiplicity 0..1; }
}

relation TaskHasPostCondition {
	Task playsRole taskPosCondition { multiplicity 0..1; }
	Condition playsRole postConstraint { multiplicity 0..1; }
}

relation TaskHasTaskWorkItem {
	Task playsRole task { multiplicity 0..1; }
	TaskWorkItem playsRole taskWorkItem { multiplicity 0..1; }
}

// BWDataModel
relation BWDataModelHasEntities {
	BWDataModel playsRole dataModel { multiplicity 0..1; }
	BWEntity playsRole entities { multiplicity 0..*; }
}

relation BWDataModelHasAttributes {
	BWDataModel playsRole dataModel { multiplicity 0..1; }
	BWAttribute playsRole attributes { multiplicity 0..*; }
}

relation BWDataModelHasAttributeGroup {
	BWDataModel playsRole dataModel { multiplicity 1..1; }
	BWAttributeGroup playsRole attributeGroup { multiplicity 0..*; }
}

relation BWDataModelHasBWRelation {
	BWDataModel playsRole dataModel { multiplicity 0..1; }
	BWRelation playsRole relations { multiplicity 0..*; }
}

// BWEntity
relation BWEntityHasBWAttributes {
	BWEntity playsRole entity { multiplicity 0..1; }
	BWAttribute playsRole attributes { multiplicity 0..*; }
}

relation BWEntityHasBWAttributeGroups {
	BWEntity playsRole entity { multiplicity 1..1; }
	BWAttributeGroup playsRole attributeGroup { multiplicity 0..*; }
}


relation BWEntityHasEntityInstances {
	BWEntity playsRole entity { multiplicity 0..1; }
	EntityInstance playsRole entityInstances { multiplicity 0..*; }
}

// BWRelation
relation BWRelationHasRelationInstances {
	BWRelation playsRole relationType { multiplicity 0..1; } //FIXME relation
	RelationInstance playsRole relationInstances { multiplicity 0..*; }
}

// BWAttributes
relation BWAttributeHasAttributeInstances {
	BWAttribute playsRole attribute { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstances { multiplicity 0..*; }
}

// BWAttributeGroup
relation BWAttributeGroupHasAttributes {
	BWAttributeGroup playsRole attributeGroup { multiplicity 0..1; }
	BWAttribute playsRole attribute { multiplicity 0..*; }
}

// EntityInstance
relation EntityInstanceHasAttributeInstances {
	EntityInstance playsRole entityInstance { multiplicity 0..1; }
	AttributeInstance playsRole attributeInstances { multiplicity 0..*; }
}

relation BWRelationHasBWEntityOne {
	BWRelation playsRole relationsOne { multiplicity 0..*; }
	BWEntity playsRole entityOne { multiplicity 1..1; }
}

relation BWRelationHasBWEntityTwo {
	BWRelation playsRole relationsTwo { multiplicity 0..*; }
	BWEntity playsRole entityTwo { multiplicity 1..1; }
}

/*
relation EntityInstanceMayHaveRelationInstances {
	EntityInstance playsRole entityInstances { multiplicity 0..*; } //FIXME 0..2
	RelationInstance playsRole relationInstances { multiplicity 0..*; }
}*/

//NEW
/*
relation BWEntityMayBeRelationBWEntityOne {
	BWEntity playsRole entityOne { multiplicity 0..1; }
	BWRelation playsRole entityOneRelationInstances { multiplicity 0..*; }
}

relation BWEntityMayBeRelationBWEntityTwo {
	BWEntity playsRole entityTwo { multiplicity 0..1; }
	BWRelation playsRole entityTwoRelationInstances { multiplicity 0..*; }
}*/

relation EntityInstanceMayBeRelationEntityOne {
	EntityInstance playsRole entityInstanceOne { multiplicity 0..1; }
	RelationInstance playsRole entityInstanceOneRelationInstances { multiplicity 0..*; }
}

relation EntityInstanceMayBeRelationEntityTwo {
	EntityInstance playsRole entityInstanceTwo { multiplicity 0..1; }
	RelationInstance playsRole entityInstanceTwoRelationInstances { multiplicity 0..*; }
}



// Conditions
// AndCondition
relation AndConditionHasLeftConditions {
	AndCondition playsRole andLeftCondition { multiplicity 0..1; }
	Condition playsRole leftCondition { multiplicity 0..1; }
}

relation AndConditionHasRightConditions {
	AndCondition playsRole andRightCondition { multiplicity 0..1; }
	Condition playsRole rightCondition { multiplicity 0..1; }
}

// OrCondition
relation OrConditionHasLeftConditions {
	OrCondition playsRole orLeftCondition { multiplicity 0..1; }
	Condition playsRole leftCondition { multiplicity 0..1; } 
}

relation OrConditionHasRightConditions {
	OrCondition playsRole orRightCondition { multiplicity 0..1; }
	Condition playsRole rightCondition { multiplicity 0..1; } 
}

// NotCondition
relation NotConditionHasConditions {
	NotCondition playsRole notCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

// ExistsBWAttributeCondition
relation ExistsBWAttributeConditionHasBWAttributes {
	ExistsAttributeCondition playsRole existsAttributeCondition { multiplicity 0..*; }
	BWAttribute playsRole attribute { multiplicity 0..1; }
}

//ExistsEntityCondition
relation ExistsBWEntityConditionHasEntities {
	ExistsEntityCondition playsRole existsEntityCondition { multiplicity 0..*; }
	BWEntity playsRole entity { multiplicity 0..1; }
}

// CompareAttributeToValueCondition
relation CompareAttributeToValueConditionHasAttributes {
	CompareAttributeToValueCondition playsRole compareAttributeToValueCondition { multiplicity 0..*; }
	BWAttribute playsRole attribute { multiplicity 0..1; }
}

//OrganizationalModel
relation BlendedWorkflowHasOrganizationalModel {
	BlendedWorkflow playsRole blendedWorkflow {multiplicity 0..1;}
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
}

relation OrganizationalModelHasRoles {
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
	Role playsRole roles {multiplicity 0..*;}
}

relation OrganizationalModelHasUsers {
	OrganizationalModel playsRole organizationalModel {multiplicity 0..1;}
	User playsRole users {multiplicity 0..*;}
}

relation BWInstanceHasUser {
	BWInstance playsRole bwInstance {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation UserHasRoles {
	User playsRole users {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation TaskHasRoles {
	Task playsRole tasks {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation TaskHasUsers {
	Task playsRole tasks {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation AchieveGoalHasRoles {
	AchieveGoal playsRole achieveGoals {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation AchieveGoalHasUsers {
	AchieveGoal playsRole achieveGoals {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

relation WorkItemHasRoles {
	WorkItem playsRole workItems {multiplicity 0..*;}
	Role playsRole role {multiplicity 0..1;}
}

relation WorkItemHasUsers {
	WorkItem playsRole workItems {multiplicity 0..*;}
	User playsRole user {multiplicity 0..1;}
}

//NEWBWGoalModel Relations
relation AchieveGoalHasBWEntity {
	AchieveGoal playsRole achieveGoalContext {multiplicity 0..*;}
	BWEntity playsRole entityContext {multiplicity 0..1;}
}

relation MaintainGoalHasBWEntity {
	MaintainGoal playsRole maintainGoalContext {multiplicity 0..*;}
	BWEntity playsRole maintainGoalEntityContext {multiplicity 0..1;}
}

relation GoalWorkItemHasEntityInstances {
	GoalWorkItem playsRole goalWorkItemContext {multiplicity 0..*;}
	EntityInstance playsRole entityInstanceContext {multiplicity 0..1;}
}

relation MaintainGoalHasMaintainCondition {
	MaintainGoal playsRole maintainConditionAchieveGoal {multiplicity 0..1;}
	Condition playsRole maintainCondition {multiplicity 0..1;}
}

relation GoalWorkItemHasActivateCondition {
	GoalWorkItem playsRole activateConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole activateConditions {multiplicity 0..*;}
}

relation GoalWorkItemHasMaintainConditions {
	GoalWorkItem playsRole maintainConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole maintainConditions {multiplicity 0..*;}
}

relation GoalWorkItemHasSucessCondition {
	GoalWorkItem playsRole sucessConditionGoalWorkItem {multiplicity 0..*;}
	Condition playsRole sucessCondition {multiplicity 0..1;}
}

//ForAllCondition
relation ForAllConditionConditionHasCondition {
	ForAllCondition playsRole forAllCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

//relation ForAllConditionConditionHasRelationRole {
//	ForAllCondition playsRole forAllCondition { multiplicity 0..1; }
//	RelationRole playsRole relationRole { multiplicity 0..1; }
//}

relation ForAllConditionConditionConditionHasBWEntity {
	ForAllCondition playsRole forAllCondition { multiplicity 0..*; }
	BWEntity playsRole forAllEntity { multiplicity 0..1; }
}

relation ForAllConditionConditionConditionHasBWRelation {
	ForAllCondition playsRole forAllCondition { multiplicity 0..*; }
	BWRelation playsRole forAllRelation { multiplicity 0..1; }
}

//ExistsOne
relation ExistsOneConditionHasCondition {
	ExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	Condition playsRole condition { multiplicity 0..1; }
}

relation ExistsOneConditionConditionHasBWEntity {
	ExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	BWEntity playsRole existsOneEntity { multiplicity 0..1; }
}

relation ExistsOneConditionConditionHasBWRelation {
	ExistsOneCondition playsRole existsOneCondition { multiplicity 0..1; }
	BWRelation playsRole existsOneRelation { multiplicity 0..1; }
}

//RelationRole
//relation RelationRoleHasBWRelation {
//	RelationRole playsRole relationRole {multiplicity 0..1;}
//	BWRelation playsRole relationRoleRelation {multiplicity 0..1;}
//}
//
//relation RelationRoleHasBWEntity {
//	RelationRole playsRole relationRole {multiplicity 0..1;}
//	BWEntity playsRole entity {multiplicity 0..1;}
//}


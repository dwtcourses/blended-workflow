package pt.ist.socialsoftware.blendedworkflow.resources.domain;

class ResourceModel;

relation SpecificationHasResourceModel {
	.pt.ist.socialsoftware.blendedworkflow.core.domain.Specification playsRole spec {
		multiplicity 1..1;
	}
	ResourceModel playsRole resourceModel {
		multiplicity 0..1;
	}
}

class Capability {
    String name;
    String description;
}

class Role {
    String name;
    String description;
}

class Unit {
    String name;
    String description;
}

class Position {
    String name;
    String description;
}

class Person {
    String name;
    String description;
}

relation ResourceModelHasCapabilities {
    ResourceModel playsRole resourceModel { multiplicity 1..1; }
    Capability playsRole capability { multiplicity 0..*; }
}

relation ResourceModelHasRoles {
    ResourceModel playsRole resourceModel { multiplicity 1..1; }
    Role playsRole role { multiplicity 0..*; }
}

relation ResourceModelHasUnits {
    ResourceModel playsRole resourceModel { multiplicity 1..1; }
    Unit playsRole unit { multiplicity 0..*; }
}

relation ResourceModelHasPositions {
    ResourceModel playsRole resourceModel { multiplicity 1..1; }
    Position playsRole position { multiplicity 0..*; }
}

relation ResourceModelHasPersons {
    ResourceModel playsRole resourceModel { multiplicity 1..1; }
    Person playsRole person { multiplicity 0..*; }
}

relation PositionBelongsToUnit {
    Unit playsRole unit { multiplicity 1..1; }
    Position playsRole position { multiplicity 0..*; }
}

relation PositionHasRoles {
    Position playsRole position { multiplicity 0..*; }
    Role playsRole role { multiplicity 0..*; }
}

relation PositionReportsToPosition {
    Position playsRole isReportedBy { multiplicity 0..*; }
    Position playsRole reportsTo { multiplicity 0..1; }
}

relation PositionDelegatesWorkToPosition {
    Position playsRole workDelegatedBy { multiplicity 0..*; }
    Position playsRole canDelegateWorkTo { multiplicity 0..*; }
}

relation PersonHasPositions {
    Person playsRole person { multiplicity 0..*; }
    Position playsRole position { multiplicity 0..*; }
}

relation PersonHasCapability {
    Person playsRole person { multiplicity 0..*; }
    Capability playsRole capability { multiplicity 0..*; }
}

/*
RAL Expressions
*/

class RALExpression;

relation ResourceModelHasRALExpressions {
    ResourceModel playsRole resourceModel { multiplicity 1..1; }
    RALExpression playsRole ralExpression { multiplicity 0..*; }
}

relation ProductHasResponsibleFor {
    .pt.ist.socialsoftware.blendedworkflow.core.domain.Product playsRole productResponsibleFor { multiplicity 0..1;}
    RALExpression playsRole responsibleFor { multiplicity 0..1; }
}

relation ProductHasInforms {
    .pt.ist.socialsoftware.blendedworkflow.core.domain.Product playsRole productInforms { multiplicity 0..1;}
    RALExpression playsRole informs { multiplicity 0..1; }
}

class RALExprAnyone extends RALExpression;
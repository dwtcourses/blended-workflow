<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="compile" name="blendedworkflow">
	<description>Blended Workflow Build File</description>

	<!-- Properties -->
	<property name="application.name" value="${ant.project.name}" />
	<property name="tomcat.home"  value="C:/Users/User/Desktop/apache-tomcat-7.0.26"/>
	
	<property name="src.rel-dir" value="src/main" />
	<property name="test.src.rel-dir" value="src/test"/>
	<property name="build.rel-dir" value="target" />
	<property name="lib.rel-dir" value="lib" />
	<property name="db.rel-dir" value="db"/>
	<property name="test-db.rel-dir" value="test-db"/>
	<property name="dist.rel-dir" value="dist"/>
	<property name="eclipse.build.rel-dir" value="bin"/>
	
	<property name="java.src.rel-dir" value="${src.rel-dir}/java" />
	<property name="java.test.src.rel-dir" value="${test.src.rel-dir}/java"/>
	<property name="dml.src.rel-dir" value="${src.rel-dir}/dml" />
	<property name="webapp.src.rel-dir" value="${src.rel-dir}/webapp"/>
	<property name="config.src.rel-dir" value="${src.rel-dir}/config"/>
	
	<property name="generated-src.build.rel-dir" value="${build.rel-dir}/src" />
	<property name="war.target.rel-dir" value="${build.rel-dir}/war"/>
	<property name="classes.build.rel-dir" value="${war.target.rel-dir}/WEB-INF/classes"/>
	
	<property name="dml.filename" value="${application.name}.dml" />
	<property name="dml.rel-file" value="${dml.src.rel-dir}/${dml.filename}" />
	<property name="war.filename" value="${application.name}.war"/>
	<property name="build.properties.filename" value="build.properties" />
	<property name="build.properties.rel-dir" value="${config.src.rel-dir}/${build.properties.filename}"/>
	
	<property file="${build.properties.rel-dir}" />
	
	<!-- The encoding of all the source files should be the same! -->
	<property name="javac.encoding" value="UTF-8" />
	
	<!-- java.file.encoding should match your terminal's encoding -->
	<property name="java.file.encoding" value="UTF-8" />

	<!-- Project Classpath -->
	<path id="project.classpath">
		<pathelement location="${classes.build.rel-dir}" />
		<fileset dir="${lib.rel-dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef resource="pt/ist/fenixframework/dml-ant.xml" classpathref="project.classpath" />

	<!-- Prepare -->
	<target name="prepare">
		<echo message="Preparing the project for build..." />
		<mkdir dir="${classes.build.rel-dir}" />
		<mkdir dir="${db.rel-dir}"/>
	    <mkdir dir="${test-db.rel-dir}"/>
	</target>
	
	<!-- Generate Domain -->
	<target name="generate-domain" depends="prepare">
		<echo message="Generating base domain classes..." />
		<echo message="Using: ${dml.rel-file}" />
		<dml-domain-generator destDirectory="${java.src.rel-dir}" destDirectoryBase="${generated-src.build.rel-dir}">
			<fileset file="${dml.rel-file}" />
		</dml-domain-generator>
	</target>
	
	<!-- Compile -->
	<target name="compile" depends="generate-domain, prepare">
		<echo message="Compiling sources..." />
		<javac destdir="${classes.build.rel-dir}" debug="true" debuglevel="lines,vars,source" optimize="true" deprecation="true" verbose="false" includeantruntime="false">
			<classpath refid="project.classpath" />
			<src>
				<pathelement path="${generated-src.build.rel-dir}:${java.src.rel-dir}" />
			</src>
			<compilerarg line="" />
		</javac>
	</target>
	
	<!-- Compile Tests -->
	<target name="compile-tests" depends="compile, instrument-classes" description="Compile the tests">
		<javac destdir="${classes.build.rel-dir}" debug="true" debuglevel="lines,vars,source" optimize="true" deprecation="true" verbose="false" includeantruntime="false" encoding="${javac.encoding}">
	      <classpath refid="project.classpath" />
	      <src>
	        <pathelement path="${java.test.src.rel-dir}"/>
	      </src>
		</javac>
	</target>
	
	<!-- Instrument Classes -->
	<target name="instrument-classes" depends="compile">
		<echo message="Injecting FenixFramework Voodoo Magic..." />
		<dml-post-processor dir="${classes.build.rel-dir}">
			<fileset file="${dml.rel-file}" />
			<classpath refid="project.classpath" />
		</dml-post-processor>
	</target>
	
	<!-- Clean -->
	<target name="clean" description="Cleans the compiled classes and generated sources">
		<delete dir="${build.rel-dir}" />
		<delete dir="${eclipse.build.rel-dir}" />
		<delete dir="${dist.rel-dir}" />		
		<delete dir="${test-db.rel-dir}"/>
		<delete dir="${db.rel-dir}"/>
	</target>
	
	<target name="prepare-war" depends="compile, instrument-classes" description="Copies the libs and classes to the WEB-INF folder">
		<copy file="${dml.rel-file}" todir="${classes.build.rel-dir}"/>
			<copy file="${build.properties.rel-dir}" todir="${classes.build.rel-dir}"/>
				<copy todir="${war.target.rel-dir}" >
					<fileset dir="${webapp.src.rel-dir}" includes="**"/>
				</copy>
		<copy todir="${war.target.rel-dir}/WEB-INF/lib" >
			<fileset dir="${lib.rel-dir}" includes="**">
			</fileset>
		</copy>
	</target>

	<target name="war" depends="prepare-war" description="Create a war file">
		<zip destfile="${dist.rel-dir}/${war.filename}" basedir="${war.target.rel-dir}"/>
	</target>
	
	<!-- Test All-->
	<target name="test-all" depends="compile-tests" description="Run the tests">
		<echo message="Testing all services..." />
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.LoadBWSpecificationServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.CreateBWInstanceServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.CheckInWorkItemServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.SkipWorkItemServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.CreateGoalServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.HandleEnabledTaskWorkItemServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.HandleTaskPreActivityServiceTest" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.HandleCompletedWorkItemFromWorkletServiceTest" />
		</junit>
	</target>
	
	<!-- Test LoadBWSpecification -->
	<target name="test-loadBWSpecification" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.LoadBWSpecificationServiceTest" />
		</junit>
	</target>
		
	<!-- Test CreateBWInstance -->
	<target name="test-createBWInstance" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.CreateBWInstanceServiceTest" />
		</junit>
	</target>
	
	<!-- Test CheckInWorkItem-->
	<target name="test-checkInWorkItem" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.CheckInWorkItemServiceTest" />
		</junit>
	</target>
	
	<!-- Test SkipWorkItem -->
	<target name="test-skipWorkItem" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.SkipWorkItemServiceTest" />
		</junit>
	</target>
	
	<!-- Test CreateGoal -->
	<target name="test-createGoal" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.CreateGoalServiceTest" />
		</junit>
	</target>
	
	<!-- Test Enabled Task -->
	<target name="test-enabledTaskWorkItem" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.HandleEnabledTaskWorkItemServiceTest" />
		</junit>
	</target>
	
	<!-- Test Pre-Activity -->
	<target name="test-preActivity" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.HandleTaskPreActivityServiceTest" />
		</junit>
	</target>
	
	<!-- Test LoadBWSpecification -->
	<target name="test-workletCompleted" depends="compile-tests">
		<junit>
			<classpath refid="project.classpath" />
			<formatter type="brief" usefile="false" />
			<test name="pt.ist.socialsoftware.blendedworkflow.engines.bwengine.servicelayer.test.HandleCompletedWorkItemFromWorkletServiceTest" />
		</junit>
	</target>
	
</project>
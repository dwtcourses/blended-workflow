/*
 * generated by Xtext
 */
package org.blended.data.validation

import org.blended.data.data.DataModel
import org.blended.data.data.DataPackage
import org.eclipse.xtext.validation.Check
import pt.ist.socialsoftware.blendedworkflow.service.BWException
import pt.ist.socialsoftware.blendedworkflow.service.design.DesignInterface
import static extension org.eclipse.xtext.EcoreUtil2.*

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class DataValidator extends AbstractDataValidator {
  	public static val INVALID_NAME = 'invalidName'
 	
  		@Check
	  	def checkModel(DataModel model) {
	  	  	var instance = DesignInterface.getInstance
	  		try {
				var fileName = model.eResource.normalizedURI.lastSegment.split("\\.").get(0)
//	  			instance.loadDataModel(model, fileName)
	  		} catch (BWException bwe) {
	  			error('Specification with the same name already exists', DataPackage.Literals.SPECIFICATION__NAME, INVALID_NAME)
	  		}

	  		//if (entity.uid == null) {
	  		//	entity.uid = entity.hashCode().toString
	  		//	System.out.println("UUID for entity " + entity.name + ": " + entity.uid)
	  		//}
	  		//else System.out.println("UUID for entity " + entity.name + "is already assigned with value: " + entity.uid)
	  		//System.out.println("UUID for entity " + entity.name + ": " + entity.hashCode) 		
  	}

}

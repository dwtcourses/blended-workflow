/*
 * generated by Xtext
 */
grammar InternalData;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.blended.data.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.blended.data.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.blended.data.services.DataGrammarAccess;

}

@parser::members {
 
 	private DataGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DataGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDataModel
entryRuleDataModel 
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataModelAccess().getGroup()); }
(rule__DataModel__Group__0)
{ after(grammarAccess.getDataModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeGroup
entryRuleAttributeGroup 
:
{ before(grammarAccess.getAttributeGroupRule()); }
	 ruleAttributeGroup
{ after(grammarAccess.getAttributeGroupRule()); } 
	 EOF 
;

// Rule AttributeGroup
ruleAttributeGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeGroupAccess().getGroup()); }
(rule__AttributeGroup__Group__0)
{ after(grammarAccess.getAttributeGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociation
entryRuleAssociation 
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationAccess().getGroup()); }
(rule__Association__Group__0)
{ after(grammarAccess.getAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCardinality
entryRuleCardinality 
:
{ before(grammarAccess.getCardinalityRule()); }
	 ruleCardinality
{ after(grammarAccess.getCardinalityRule()); } 
	 EOF 
;

// Rule Cardinality
ruleCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCardinalityAccess().getAlternatives()); }
(rule__Cardinality__Alternatives)
{ after(grammarAccess.getCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
	ruleOr
{ after(grammarAccess.getExpressionAccess().getOrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimary
entryRulePrimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomic
entryRuleAtomic 
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
(rule__Atomic__Alternatives)
{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Entity__AttributesAlternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAttributeGroupParserRuleCall_5_0_0()); }
	ruleAttributeGroup
{ after(grammarAccess.getEntityAccess().getAttributesAttributeGroupParserRuleCall_5_0_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0_1()); }
	ruleAttribute
{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getGroup_1()); }
(rule__Cardinality__Group_1__0)
{ after(grammarAccess.getCardinalityAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getGroup_2()); }
(rule__Cardinality__Group_2__0)
{ after(grammarAccess.getCardinalityAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getCardinalityAccess().getGroup_3()); }
(rule__Cardinality__Group_3__0)
{ after(grammarAccess.getCardinalityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
(rule__Primary__Group_0__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
(rule__Primary__Group_1__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
	ruleAtomic
{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
(rule__Atomic__Group_0__0)
{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
(rule__Atomic__Group_1__0)
{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DataModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getEntitiesAssignment_0()); }
(rule__DataModel__EntitiesAssignment_0)*
{ after(grammarAccess.getDataModelAccess().getEntitiesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__1__Impl
	rule__DataModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getAssociatiosAssignment_1()); }
(rule__DataModel__AssociatiosAssignment_1)*
{ after(grammarAccess.getDataModelAccess().getAssociatiosAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getConstraintAssignment_2()); }
(rule__DataModel__ConstraintAssignment_2)*
{ after(grammarAccess.getDataModelAccess().getConstraintAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }

	'Entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExistsAssignment_2()); }
(rule__Entity__ExistsAssignment_2)?
{ after(grammarAccess.getEntityAccess().getExistsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_3()); }
(rule__Entity__Group_3__0)?
{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
(rule__Entity__AttributesAssignment_5)*
{ after(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Entity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDependsOnKeyword_3_0()); }

	'dependsOn' 

{ after(grammarAccess.getEntityAccess().getDependsOnKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDependsOnAssignment_3_1()); }
(rule__Entity__DependsOnAssignment_3_1)
{ after(grammarAccess.getEntityAccess().getDependsOnAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
(rule__Attribute__NameAssignment_0)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
(rule__Attribute__TypeAssignment_2)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getMandatoryAssignment_3()); }
(rule__Attribute__MandatoryAssignment_3)?
{ after(grammarAccess.getAttributeAccess().getMandatoryAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_4()); }
(rule__Attribute__Group_4__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Attribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__0__Impl
	rule__Attribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getDependsOnKeyword_4_0()); }

	'dependsOn' 

{ after(grammarAccess.getAttributeAccess().getDependsOnKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__1__Impl
	rule__Attribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getDependsOnAssignment_4_1()); }
(rule__Attribute__DependsOnAssignment_4_1)
{ after(grammarAccess.getAttributeAccess().getDependsOnAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_4_2()); }
(rule__Attribute__Group_4_2__0)*
{ after(grammarAccess.getAttributeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4_2__0__Impl
	rule__Attribute__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getAttributeAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getDependsOnAssignment_4_2_1()); }
(rule__Attribute__DependsOnAssignment_4_2_1)
{ after(grammarAccess.getAttributeAccess().getDependsOnAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group__0__Impl
	rule__AttributeGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getAttributeGroupAccess().getGroupKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group__1__Impl
	rule__AttributeGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getMandatoryAssignment_1()); }
(rule__AttributeGroup__MandatoryAssignment_1)?
{ after(grammarAccess.getAttributeGroupAccess().getMandatoryAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group__2__Impl
	rule__AttributeGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getGroup_2()); }
(rule__AttributeGroup__Group_2__0)?
{ after(grammarAccess.getAttributeGroupAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group__3__Impl
	rule__AttributeGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAttributeGroupAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group__4__Impl
	rule__AttributeGroup__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_4()); }
(rule__AttributeGroup__AttributesAssignment_4)
{ after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_4()); }
)
(
{ before(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_4()); }
(rule__AttributeGroup__AttributesAssignment_4)*
{ after(grammarAccess.getAttributeGroupAccess().getAttributesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAttributeGroupAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AttributeGroup__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group_2__0__Impl
	rule__AttributeGroup__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnKeyword_2_0()); }

	'dependsOn' 

{ after(grammarAccess.getAttributeGroupAccess().getDependsOnKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group_2__1__Impl
	rule__AttributeGroup__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnAssignment_2_1()); }
(rule__AttributeGroup__DependsOnAssignment_2_1)
{ after(grammarAccess.getAttributeGroupAccess().getDependsOnAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getGroup_2_2()); }
(rule__AttributeGroup__Group_2_2__0)*
{ after(grammarAccess.getAttributeGroupAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeGroup__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group_2_2__0__Impl
	rule__AttributeGroup__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAttributeGroupAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGroup__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGroup__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnAssignment_2_2_1()); }
(rule__AttributeGroup__DependsOnAssignment_2_2_1)
{ after(grammarAccess.getAttributeGroupAccess().getDependsOnAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Association__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__0__Impl
	rule__Association__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getAssociationKeyword_0()); }

	'Association' 

{ after(grammarAccess.getAssociationAccess().getAssociationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__1__Impl
	rule__Association__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__2__Impl
	rule__Association__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getEntity1Assignment_2()); }
(rule__Association__Entity1Assignment_2)
{ after(grammarAccess.getAssociationAccess().getEntity1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__3__Impl
	rule__Association__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getWithKeyword_3()); }

	'with' 

{ after(grammarAccess.getAssociationAccess().getWithKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__4__Impl
	rule__Association__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getName1Assignment_4()); }
(rule__Association__Name1Assignment_4)
{ after(grammarAccess.getAssociationAccess().getName1Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__5__Impl
	rule__Association__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getAssociationAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__6__Impl
	rule__Association__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCardinality1Assignment_6()); }
(rule__Association__Cardinality1Assignment_6)
{ after(grammarAccess.getAssociationAccess().getCardinality1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__7__Impl
	rule__Association__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getAssociationAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__8__Impl
	rule__Association__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getEntity2Assignment_8()); }
(rule__Association__Entity2Assignment_8)
{ after(grammarAccess.getAssociationAccess().getEntity2Assignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__9__Impl
	rule__Association__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getWithKeyword_9()); }

	'with' 

{ after(grammarAccess.getAssociationAccess().getWithKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__10__Impl
	rule__Association__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getName2Assignment_10()); }
(rule__Association__Name2Assignment_10)
{ after(grammarAccess.getAssociationAccess().getName2Assignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__11__Impl
	rule__Association__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getLeftParenthesisKeyword_11()); }

	'(' 

{ after(grammarAccess.getAssociationAccess().getLeftParenthesisKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__12__Impl
	rule__Association__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCardinality2Assignment_12()); }
(rule__Association__Cardinality2Assignment_12)
{ after(grammarAccess.getAssociationAccess().getCardinality2Assignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__13__Impl
	rule__Association__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightParenthesisKeyword_13()); }

	')' 

{ after(grammarAccess.getAssociationAccess().getRightParenthesisKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Association__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_14()); }

	'}' 

{ after(grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}
































rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }

	'Constraint' 

{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getConstraintAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintAssignment_2()); }
(rule__Constraint__ConstraintAssignment_2)
{ after(grammarAccess.getConstraintAccess().getConstraintAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cardinality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__0__Impl
	rule__Cardinality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__1__Impl
	rule__Cardinality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_1()); }

	'..' 

{ after(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cardinality__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_2__0__Impl
	rule__Cardinality__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_2_0()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_2__1__Impl
	rule__Cardinality__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_2_1()); }

	'..' 

{ after(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getAsteriskKeyword_2_2()); }

	'*' 

{ after(grammarAccess.getCardinalityAccess().getAsteriskKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cardinality__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_3__0__Impl
	rule__Cardinality__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_3_0()); }
	RULE_INT
{ after(grammarAccess.getCardinalityAccess().getINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_3__1__Impl
	rule__Cardinality__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_3_1()); }

	'..' 

{ after(grammarAccess.getCardinalityAccess().getFullStopFullStopKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cardinality__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cardinality__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cardinality__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCardinalityAccess().getPlusSignKeyword_3_2()); }

	'+' 

{ after(grammarAccess.getCardinalityAccess().getPlusSignKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getORKeyword_1_1()); }

	'OR' 

{ after(grammarAccess.getOrAccess().getORKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
(rule__Or__RightAssignment_1_2)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
{ after(grammarAccess.getAndAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getGroup_1()); }
(rule__And__Group_1__0)*
{ after(grammarAccess.getAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getANDKeyword_1_1()); }

	'AND' 

{ after(grammarAccess.getAndAccess().getANDKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
(rule__And__RightAssignment_1_2)
{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }

	'NOT' 

{ after(grammarAccess.getPrimaryAccess().getNOTKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
(rule__Primary__ExpressionAssignment_1_2)
{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAttributeDefinitionAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getAttributeDefinitionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__1__Impl
	rule__Atomic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getDEFKeyword_0_1()); }

	'DEF' 

{ after(grammarAccess.getAtomicAccess().getDEFKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__2__Impl
	rule__Atomic__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__3__Impl
	rule__Atomic__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getNameAssignment_0_3()); }
(rule__Atomic__NameAssignment_0_3)
{ after(grammarAccess.getAtomicAccess().getNameAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getAttributeValueAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getAttributeValueAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getNameAssignment_1_1()); }
(rule__Atomic__NameAssignment_1_1)
{ after(grammarAccess.getAtomicAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DataModel__EntitiesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getEntitiesEntityParserRuleCall_0_0()); }
	ruleEntity{ after(grammarAccess.getDataModelAccess().getEntitiesEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__AssociatiosAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getAssociatiosAssociationParserRuleCall_1_0()); }
	ruleAssociation{ after(grammarAccess.getDataModelAccess().getAssociatiosAssociationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ConstraintAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getConstraintConstraintParserRuleCall_2_0()); }
	ruleConstraint{ after(grammarAccess.getDataModelAccess().getConstraintConstraintParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ExistsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExistsExistsKeyword_2_0()); }
(
{ before(grammarAccess.getEntityAccess().getExistsExistsKeyword_2_0()); }

	'exists' 

{ after(grammarAccess.getEntityAccess().getExistsExistsKeyword_2_0()); }
)

{ after(grammarAccess.getEntityAccess().getExistsExistsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__DependsOnAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDependsOnEntityCrossReference_3_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getDependsOnEntityIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getDependsOnEntityIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getDependsOnEntityCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAlternatives_5_0()); }
(rule__Entity__AttributesAlternatives_5_0)
{ after(grammarAccess.getEntityAccess().getAttributesAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeAccess().getNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getTypeIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__MandatoryAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getMandatoryMandatoryKeyword_3_0()); }
(
{ before(grammarAccess.getAttributeAccess().getMandatoryMandatoryKeyword_3_0()); }

	'mandatory' 

{ after(grammarAccess.getAttributeAccess().getMandatoryMandatoryKeyword_3_0()); }
)

{ after(grammarAccess.getAttributeAccess().getMandatoryMandatoryKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DependsOnAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getDependsOnAttributeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getDependsOnAttributeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeAccess().getDependsOnAttributeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getDependsOnAttributeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__DependsOnAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getDependsOnAttributeCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getDependsOnAttributeQualifiedNameParserRuleCall_4_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeAccess().getDependsOnAttributeQualifiedNameParserRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getDependsOnAttributeCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__MandatoryAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getMandatoryMandatoryKeyword_1_0()); }
(
{ before(grammarAccess.getAttributeGroupAccess().getMandatoryMandatoryKeyword_1_0()); }

	'mandatory' 

{ after(grammarAccess.getAttributeGroupAccess().getMandatoryMandatoryKeyword_1_0()); }
)

{ after(grammarAccess.getAttributeGroupAccess().getMandatoryMandatoryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__DependsOnAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__DependsOnAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeCrossReference_2_2_1_0()); }
(
{ before(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeQualifiedNameParserRuleCall_2_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeQualifiedNameParserRuleCall_2_2_1_0_1()); }
)
{ after(grammarAccess.getAttributeGroupAccess().getDependsOnAttributeCrossReference_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGroup__AttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_4_0()); }
	ruleAttribute{ after(grammarAccess.getAttributeGroupAccess().getAttributesAttributeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Entity1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getEntity1EntityCrossReference_2_0()); }
(
{ before(grammarAccess.getAssociationAccess().getEntity1EntityIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getEntity1EntityIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getEntity1EntityCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Name1Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getName1IDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getName1IDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Cardinality1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCardinality1CardinalityParserRuleCall_6_0()); }
	ruleCardinality{ after(grammarAccess.getAssociationAccess().getCardinality1CardinalityParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Entity2Assignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getEntity2EntityCrossReference_8_0()); }
(
{ before(grammarAccess.getAssociationAccess().getEntity2EntityIDTerminalRuleCall_8_0_1()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getEntity2EntityIDTerminalRuleCall_8_0_1()); }
)
{ after(grammarAccess.getAssociationAccess().getEntity2EntityCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Name2Assignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getName2IDTerminalRuleCall_10_0()); }
	RULE_ID{ after(grammarAccess.getAssociationAccess().getName2IDTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Cardinality2Assignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationAccess().getCardinality2CardinalityParserRuleCall_12_0()); }
	ruleCardinality{ after(grammarAccess.getAssociationAccess().getCardinality2CardinalityParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConstraintAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getConstraintAccess().getConstraintExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
	ruleAnd{ after(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	rulePrimary{ after(grammarAccess.getAndAccess().getRightPrimaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	rulePrimary{ after(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__NameAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getNameQualifiedNameParserRuleCall_0_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicAccess().getNameQualifiedNameParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



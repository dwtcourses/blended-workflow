/*
 * generated by Xtext
 */
package org.blended.activity.formatting

import org.blended.activity.services.ActivityGrammarAccess
import org.eclipse.xtext.Keyword
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig

// import com.google.inject.Inject;
// import org.blended.activity.services.ActivityGrammarAccess

/**
 * This class contains custom formatting declarations.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class ActivityFormatter extends AbstractDeclarativeFormatter {

//	@Inject extension ActivityGrammarAccess
	
	override protected void configureFormatting(FormattingConfig c) {
		var ActivityGrammarAccess f = getGrammarAccess() as ActivityGrammarAccess;
		c.autoLinewrap = 130
			
		for (Keyword key : f.findKeywords("PRE", "POST")) {
			c.setLinewrap().before(key)
			c.setIndentationIncrement.before(key)
			c.setIndentationDecrement.after(key)
		}

		c.setLinewrap(2).after(f.specificationRule)
		c.setLinewrap(2).after(f.activityRule)
		
		for (Keyword key : f.findKeywords("(")) {
			c.setNoSpace().before(key)
			c.setNoSpace().after(key)
		}
		
		for (Keyword key : f.findKeywords(")")) {
			c.setNoSpace().before(key)
		}
		
		for (Keyword key : f.findKeywords(",")) {
			c.setNoSpace().before(key)
		}
		
	}
}
